#!/bin/bash
# bash filename
declare -A ClamAVImageScanTimeMap

# iteral image from ImageList
# Trivy Scanning efficiency
trivy_scanning_efficiency(){
    declare -A TrivyImageScanTimeMap
    ImageList=("$1" "$2" "$3")
    for image in ${ImageList[*]};
    do
        # get start time
        start_time=$(date +%S.%3N)
        # get CPU & memory usage
        cpuUsageBefore=$(top -bn1 | awk '/Cpu/ { print $2}')
        memUsageBefore=$(free -m | awk '/Mem/{print $3}')
        # Trivy scanning and save command
        trivy image -f json -o './reports/trivy/'$image.json $image
        # get end time
        end_time=$(date +%S.%3N)
        # get CPU & memory usage
        cpuUsageAfter=$(top -bn1 | awk '/Cpu/ { print $2}')
        memUsageAfter=$(free -m | awk '/Mem/{print $3}')

        # Total execution time in each image
        elapsed=$(echo "scale=3; $end_time - $start_time" | bc | awk '{printf "%f", $0}')
        echo "Total Image $image scanning time is:$elapsed seconds"
        TrivyImageScanTimeMap[$image]=$elapsed
        echo "CPU Usage before execution is $cpuUsageBefore %"
        echo "CPU Usage after execution is $cpuUsageAfter %"
        echo "Memory Usage before execution is $memUsageBefore MB"
        echo "Memory Usage after execution is $memUsageAfter MB"
    done
echo ${!TrivyImageScanTimeMap[@]}
echo ${TrivyImageScanTimeMap[@]}
}

# Call function
trivy_scanning_efficiency python:latest node:latest alpine:latest